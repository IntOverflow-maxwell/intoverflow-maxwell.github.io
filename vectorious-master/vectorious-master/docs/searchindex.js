Search.setIndex({"alltitles": {"API reference": [[91, "api-reference"]], "Array": [[95, "array"]], "Array creation": [[95, "array-creation"]], "Basics": [[94, "basics"], [94, null]], "Browser": [[97, "browser"]], "Classes": [[0, "classes"]], "Constructor": [[95, "constructor"], [95, "id1"]], "Development": [[92, "development"]], "Functions": [[40, "functions"]], "Home": [[93, "home"]], "Installation": [[97, "installation"]], "Linux": [[97, "linux"]], "MacOS": [[97, "macos"]], "Magic": [[95, "magic"]], "Matrix": [[95, "matrix"]], "NDArray": [[1, "ndarray"]], "NDIter": [[2, "nditer"]], "NDMultiIter": [[3, "ndmultiiter"]], "Node.js": [[97, "node-js"]], "Ones": [[95, "ones"]], "Random": [[95, "random"]], "Useful links": [[93, "useful-links"]], "User guide": [[96, "user-guide"]], "Zeros": [[95, "zeros"]], "abs": [[4, "abs"]], "acos": [[5, "acos"]], "acosh": [[6, "acosh"]], "add": [[7, "add"]], "angle": [[8, "angle"]], "array": [[9, "array"]], "asin": [[10, "asin"]], "asinh": [[11, "asinh"]], "atan": [[12, "atan"]], "atanh": [[13, "atanh"]], "augment": [[14, "augment"]], "binOp": [[15, "binop"]], "cbrt": [[16, "cbrt"]], "ceil": [[17, "ceil"]], "check": [[18, "check"]], "combine": [[19, "combine"]], "copy": [[20, "copy"]], "cos": [[21, "cos"]], "cosh": [[22, "cosh"]], "cross": [[23, "cross"]], "det": [[24, "det"]], "diagonal": [[25, "diagonal"]], "dot": [[26, "dot"]], "eig": [[27, "eig"]], "equals": [[28, "equals"]], "equidimensional": [[29, "equidimensional"]], "equilateral": [[30, "equilateral"]], "exp": [[31, "exp"]], "expm1": [[32, "expm1"]], "eye": [[33, "eye"]], "fill": [[34, "fill"]], "floor": [[35, "floor"]], "forEach": [[36, "foreach"]], "fround": [[37, "fround"]], "gauss": [[38, "gauss"]], "get": [[39, "get"]], "inv": [[41, "inv"]], "log": [[42, "log"]], "log10": [[43, "log10"]], "log1p": [[44, "log1p"]], "log2": [[45, "log2"]], "lu": [[46, "lu"]], "lu_factor": [[47, "lu-factor"]], "magic": [[48, "magic"]], "map": [[49, "map"]], "matrix": [[50, "matrix"]], "max": [[51, "max"]], "mean": [[52, "mean"]], "min": [[53, "min"]], "multiply": [[54, "multiply"]], "norm": [[55, "norm"]], "normalize": [[56, "normalize"]], "ones": [[57, "ones"]], "pow": [[58, "pow"]], "prod": [[59, "prod"]], "product": [[60, "product"]], "project": [[61, "project"]], "push": [[62, "push"]], "random": [[63, "random"]], "range": [[64, "range"]], "rank": [[65, "rank"]], "reciprocal": [[66, "reciprocal"]], "reduce": [[67, "reduce"]], "reshape": [[68, "reshape"]], "round": [[69, "round"]], "row_add": [[70, "row-add"]], "scale": [[71, "scale"]], "set": [[72, "set"]], "sign": [[73, "sign"]], "sin": [[74, "sin"]], "sinh": [[75, "sinh"]], "slice": [[76, "slice"]], "solve": [[77, "solve"]], "sqrt": [[78, "sqrt"]], "square": [[79, "square"]], "subtract": [[80, "subtract"]], "sum": [[81, "sum"]], "swap": [[82, "swap"]], "tan": [[83, "tan"]], "tanh": [[84, "tanh"]], "toArray": [[85, "toarray"]], "toString": [[86, "tostring"]], "trace": [[87, "trace"]], "transpose": [[88, "transpose"]], "trunc": [[89, "trunc"]], "zeros": [[90, "zeros"]]}, "docnames": ["api/classes/index", "api/classes/ndarray", "api/classes/nditer", "api/classes/ndmultiiter", "api/functions/abs", "api/functions/acos", "api/functions/acosh", "api/functions/add", "api/functions/angle", "api/functions/array", "api/functions/asin", "api/functions/asinh", "api/functions/atan", "api/functions/atanh", "api/functions/augment", "api/functions/binOp", "api/functions/cbrt", "api/functions/ceil", "api/functions/check", "api/functions/combine", "api/functions/copy", "api/functions/cos", "api/functions/cosh", "api/functions/cross", "api/functions/det", "api/functions/diagonal", "api/functions/dot", "api/functions/eig", "api/functions/equals", "api/functions/equidimensional", "api/functions/equilateral", "api/functions/exp", "api/functions/expm1", "api/functions/eye", "api/functions/fill", "api/functions/floor", "api/functions/forEach", "api/functions/fround", "api/functions/gauss", "api/functions/get", "api/functions/index", "api/functions/inv", "api/functions/log", "api/functions/log10", "api/functions/log1p", "api/functions/log2", "api/functions/lu", "api/functions/lu_factor", "api/functions/magic", "api/functions/map", "api/functions/matrix", "api/functions/max", "api/functions/mean", "api/functions/min", "api/functions/multiply", "api/functions/norm", "api/functions/normalize", "api/functions/ones", "api/functions/pow", "api/functions/prod", "api/functions/product", "api/functions/project", "api/functions/push", "api/functions/random", "api/functions/range", "api/functions/rank", "api/functions/reciprocal", "api/functions/reduce", "api/functions/reshape", "api/functions/round", "api/functions/row_add", "api/functions/scale", "api/functions/set", "api/functions/sign", "api/functions/sin", "api/functions/sinh", "api/functions/slice", "api/functions/solve", "api/functions/sqrt", "api/functions/square", "api/functions/subtract", "api/functions/sum", "api/functions/swap", "api/functions/tan", "api/functions/tanh", "api/functions/toArray", "api/functions/toString", "api/functions/trace", "api/functions/transpose", "api/functions/trunc", "api/functions/zeros", "api/index", "dev/index", "index", "user-guide/basics", "user-guide/basics.arrays.creation", "user-guide/index", "user-guide/installation"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["api/classes/index.rst", "api/classes/ndarray.rst", "api/classes/nditer.rst", "api/classes/ndmultiiter.rst", "api/functions/abs.rst", "api/functions/acos.rst", "api/functions/acosh.rst", "api/functions/add.rst", "api/functions/angle.rst", "api/functions/array.rst", "api/functions/asin.rst", "api/functions/asinh.rst", "api/functions/atan.rst", "api/functions/atanh.rst", "api/functions/augment.rst", "api/functions/binOp.rst", "api/functions/cbrt.rst", "api/functions/ceil.rst", "api/functions/check.rst", "api/functions/combine.rst", "api/functions/copy.rst", "api/functions/cos.rst", "api/functions/cosh.rst", "api/functions/cross.rst", "api/functions/det.rst", "api/functions/diagonal.rst", "api/functions/dot.rst", "api/functions/eig.rst", "api/functions/equals.rst", "api/functions/equidimensional.rst", "api/functions/equilateral.rst", "api/functions/exp.rst", "api/functions/expm1.rst", "api/functions/eye.rst", "api/functions/fill.rst", "api/functions/floor.rst", "api/functions/forEach.rst", "api/functions/fround.rst", "api/functions/gauss.rst", "api/functions/get.rst", "api/functions/index.rst", "api/functions/inv.rst", "api/functions/log.rst", "api/functions/log10.rst", "api/functions/log1p.rst", "api/functions/log2.rst", "api/functions/lu.rst", "api/functions/lu_factor.rst", "api/functions/magic.rst", "api/functions/map.rst", "api/functions/matrix.rst", "api/functions/max.rst", "api/functions/mean.rst", "api/functions/min.rst", "api/functions/multiply.rst", "api/functions/norm.rst", "api/functions/normalize.rst", "api/functions/ones.rst", "api/functions/pow.rst", "api/functions/prod.rst", "api/functions/product.rst", "api/functions/project.rst", "api/functions/push.rst", "api/functions/random.rst", "api/functions/range.rst", "api/functions/rank.rst", "api/functions/reciprocal.rst", "api/functions/reduce.rst", "api/functions/reshape.rst", "api/functions/round.rst", "api/functions/row_add.rst", "api/functions/scale.rst", "api/functions/set.rst", "api/functions/sign.rst", "api/functions/sin.rst", "api/functions/sinh.rst", "api/functions/slice.rst", "api/functions/solve.rst", "api/functions/sqrt.rst", "api/functions/square.rst", "api/functions/subtract.rst", "api/functions/sum.rst", "api/functions/swap.rst", "api/functions/tan.rst", "api/functions/tanh.rst", "api/functions/toArray.rst", "api/functions/toString.rst", "api/functions/trace.rst", "api/functions/transpose.rst", "api/functions/trunc.rst", "api/functions/zeros.rst", "api/index.rst", "dev/index.rst", "index.rst", "user-guide/basics.rst", "user-guide/basics.arrays.creation.rst", "user-guide/index.rst", "user-guide/installation.rst"], "indexentries": {"ndarray() (class)": [[1, "NDArray", false]], "ndarray.abs() (ndarray method)": [[1, "NDArray.abs", false]], "ndarray.acos() (ndarray method)": [[1, "NDArray.acos", false]], "ndarray.acosh() (ndarray method)": [[1, "NDArray.acosh", false]], "ndarray.add() (ndarray method)": [[1, "NDArray.add", false]], "ndarray.angle() (ndarray method)": [[1, "NDArray.angle", false]], "ndarray.asin() (ndarray method)": [[1, "NDArray.asin", false]], "ndarray.asinh() (ndarray method)": [[1, "NDArray.asinh", false]], "ndarray.atan() (ndarray method)": [[1, "NDArray.atan", false]], "ndarray.atanh() (ndarray method)": [[1, "NDArray.atanh", false]], "ndarray.augment() (ndarray method)": [[1, "NDArray.augment", false]], "ndarray.binop() (ndarray method)": [[1, "NDArray.binOp", false]], "ndarray.cbrt() (ndarray method)": [[1, "NDArray.cbrt", false]], "ndarray.ceil() (ndarray method)": [[1, "NDArray.ceil", false]], "ndarray.check() (ndarray method)": [[1, "NDArray.check", false]], "ndarray.combine() (ndarray method)": [[1, "NDArray.combine", false]], "ndarray.copy() (ndarray method)": [[1, "NDArray.copy", false]], "ndarray.cos() (ndarray method)": [[1, "NDArray.cos", false]], "ndarray.cosh() (ndarray method)": [[1, "NDArray.cosh", false]], "ndarray.cross() (ndarray method)": [[1, "NDArray.cross", false]], "ndarray.data (ndarray attribute)": [[1, "NDArray.data", false]], "ndarray.det() (ndarray method)": [[1, "NDArray.det", false]], "ndarray.diagonal() (ndarray method)": [[1, "NDArray.diagonal", false]], "ndarray.dot() (ndarray method)": [[1, "NDArray.dot", false]], "ndarray.dtype (ndarray attribute)": [[1, "NDArray.dtype", false]], "ndarray.eig() (ndarray method)": [[1, "NDArray.eig", false]], "ndarray.equals() (ndarray method)": [[1, "NDArray.equals", false]], "ndarray.equidimensional() (ndarray method)": [[1, "NDArray.equidimensional", false]], "ndarray.equilateral() (ndarray method)": [[1, "NDArray.equilateral", false]], "ndarray.exp() (ndarray method)": [[1, "NDArray.exp", false]], "ndarray.expm1() (ndarray method)": [[1, "NDArray.expm1", false]], "ndarray.fill() (ndarray method)": [[1, "NDArray.fill", false]], "ndarray.floor() (ndarray method)": [[1, "NDArray.floor", false]], "ndarray.foreach() (ndarray method)": [[1, "NDArray.forEach", false]], "ndarray.fround() (ndarray method)": [[1, "NDArray.fround", false]], "ndarray.gauss() (ndarray method)": [[1, "NDArray.gauss", false]], "ndarray.get() (ndarray method)": [[1, "NDArray.get", false]], "ndarray.inv() (ndarray method)": [[1, "NDArray.inv", false]], "ndarray.length (ndarray attribute)": [[1, "NDArray.length", false]], "ndarray.log() (ndarray method)": [[1, "NDArray.log", false]], "ndarray.log10() (ndarray method)": [[1, "NDArray.log10", false]], "ndarray.log1p() (ndarray method)": [[1, "NDArray.log1p", false]], "ndarray.log2() (ndarray method)": [[1, "NDArray.log2", false]], "ndarray.lu() (ndarray method)": [[1, "NDArray.lu", false]], "ndarray.lu_factor() (ndarray method)": [[1, "NDArray.lu_factor", false]], "ndarray.map() (ndarray method)": [[1, "NDArray.map", false]], "ndarray.max() (ndarray method)": [[1, "NDArray.max", false]], "ndarray.mean() (ndarray method)": [[1, "NDArray.mean", false]], "ndarray.min() (ndarray method)": [[1, "NDArray.min", false]], "ndarray.multiply() (ndarray method)": [[1, "NDArray.multiply", false]], "ndarray.norm() (ndarray method)": [[1, "NDArray.norm", false]], "ndarray.normalize() (ndarray method)": [[1, "NDArray.normalize", false]], "ndarray.pow() (ndarray method)": [[1, "NDArray.pow", false]], "ndarray.prod() (ndarray method)": [[1, "NDArray.prod", false]], "ndarray.product() (ndarray method)": [[1, "NDArray.product", false]], "ndarray.project() (ndarray method)": [[1, "NDArray.project", false]], "ndarray.push() (ndarray method)": [[1, "NDArray.push", false]], "ndarray.rank() (ndarray method)": [[1, "NDArray.rank", false]], "ndarray.reciprocal() (ndarray method)": [[1, "NDArray.reciprocal", false]], "ndarray.reduce() (ndarray method)": [[1, "NDArray.reduce", false]], "ndarray.reshape() (ndarray method)": [[1, "NDArray.reshape", false]], "ndarray.round() (ndarray method)": [[1, "NDArray.round", false]], "ndarray.row_add() (ndarray method)": [[1, "NDArray.row_add", false]], "ndarray.scale() (ndarray method)": [[1, "NDArray.scale", false]], "ndarray.set() (ndarray method)": [[1, "NDArray.set", false]], "ndarray.shape (ndarray attribute)": [[1, "NDArray.shape", false]], "ndarray.sign() (ndarray method)": [[1, "NDArray.sign", false]], "ndarray.sin() (ndarray method)": [[1, "NDArray.sin", false]], "ndarray.sinh() (ndarray method)": [[1, "NDArray.sinh", false]], "ndarray.slice() (ndarray method)": [[1, "NDArray.slice", false]], "ndarray.solve() (ndarray method)": [[1, "NDArray.solve", false]], "ndarray.sqrt() (ndarray method)": [[1, "NDArray.sqrt", false]], "ndarray.square() (ndarray method)": [[1, "NDArray.square", false]], "ndarray.strides (ndarray attribute)": [[1, "NDArray.strides", false]], "ndarray.subtract() (ndarray method)": [[1, "NDArray.subtract", false]], "ndarray.sum() (ndarray method)": [[1, "NDArray.sum", false]], "ndarray.swap() (ndarray method)": [[1, "NDArray.swap", false]], "ndarray.t (ndarray attribute)": [[1, "NDArray.T", false]], "ndarray.tan() (ndarray method)": [[1, "NDArray.tan", false]], "ndarray.tanh() (ndarray method)": [[1, "NDArray.tanh", false]], "ndarray.toarray() (ndarray method)": [[1, "NDArray.toArray", false]], "ndarray.tostring() (ndarray method)": [[1, "NDArray.toString", false]], "ndarray.trace() (ndarray method)": [[1, "NDArray.trace", false]], "ndarray.transpose() (ndarray method)": [[1, "NDArray.transpose", false]], "ndarray.trunc() (ndarray method)": [[1, "NDArray.trunc", false]], "ndarray.w (ndarray attribute)": [[1, "NDArray.w", false]], "ndarray.x (ndarray attribute)": [[1, "NDArray.x", false]], "ndarray.y (ndarray attribute)": [[1, "NDArray.y", false]], "ndarray.z (ndarray attribute)": [[1, "NDArray.z", false]], "nditer() (class)": [[2, "NDIter", false]], "nditer.backstrides (nditer attribute)": [[2, "NDIter.backstrides", false]], "nditer.coords (nditer attribute)": [[2, "NDIter.coords", false]], "nditer.current() (nditer method)": [[2, "NDIter.current", false]], "nditer.done() (nditer method)": [[2, "NDIter.done", false]], "nditer.factors (nditer attribute)": [[2, "NDIter.factors", false]], "nditer.index (nditer attribute)": [[2, "NDIter.index", false]], "nditer.length (nditer attribute)": [[2, "NDIter.length", false]], "nditer.lengthm1 (nditer attribute)": [[2, "NDIter.lengthm1", false]], "nditer.nd (nditer attribute)": [[2, "NDIter.nd", false]], "nditer.ndm1 (nditer attribute)": [[2, "NDIter.ndm1", false]], "nditer.next() (nditer method)": [[2, "NDIter.next", false]], "nditer.pos (nditer attribute)": [[2, "NDIter.pos", false]], "nditer.shape (nditer attribute)": [[2, "NDIter.shape", false]], "nditer.shapem1 (nditer attribute)": [[2, "NDIter.shapem1", false]], "nditer.strides (nditer attribute)": [[2, "NDIter.strides", false]], "nditer.x (nditer attribute)": [[2, "NDIter.x", false]], "ndmultiiter() (class)": [[3, "NDMultiIter", false]], "ndmultiiter.current() (ndmultiiter static method)": [[3, "NDMultiIter.current", false]], "ndmultiiter.done() (ndmultiiter static method)": [[3, "NDMultiIter.done", false]], "ndmultiiter.index (ndmultiiter attribute)": [[3, "NDMultiIter.index", false]], "ndmultiiter.iters (ndmultiiter attribute)": [[3, "NDMultiIter.iters", false]], "ndmultiiter.length (ndmultiiter attribute)": [[3, "NDMultiIter.length", false]], "ndmultiiter.lengthm1 (ndmultiiter attribute)": [[3, "NDMultiIter.lengthm1", false]], "ndmultiiter.nd (ndmultiiter attribute)": [[3, "NDMultiIter.nd", false]], "ndmultiiter.next() (ndmultiiter static method)": [[3, "NDMultiIter.next", false]], "ndmultiiter.numiter (ndmultiiter attribute)": [[3, "NDMultiIter.numiter", false]], "ndmultiiter.pos (ndmultiiter attribute)": [[3, "NDMultiIter.pos", false]], "ndmultiiter.shape (ndmultiiter attribute)": [[3, "NDMultiIter.shape", false]], "vectorious.abs() (vectorious static method)": [[4, "vectorious.abs", false]], "vectorious.acos() (vectorious static method)": [[5, "vectorious.acos", false]], "vectorious.acosh() (vectorious static method)": [[6, "vectorious.acosh", false]], "vectorious.add() (vectorious static method)": [[7, "vectorious.add", false]], "vectorious.angle() (vectorious static method)": [[8, "vectorious.angle", false]], "vectorious.array() (vectorious static method)": [[9, "vectorious.array", false]], "vectorious.asin() (vectorious static method)": [[10, "vectorious.asin", false]], "vectorious.asinh() (vectorious static method)": [[11, "vectorious.asinh", false]], "vectorious.atan() (vectorious static method)": [[12, "vectorious.atan", false]], "vectorious.atanh() (vectorious static method)": [[13, "vectorious.atanh", false]], "vectorious.augment() (vectorious static method)": [[14, "vectorious.augment", false]], "vectorious.binop() (vectorious static method)": [[15, "vectorious.binOp", false]], "vectorious.cbrt() (vectorious static method)": [[16, "vectorious.cbrt", false]], "vectorious.ceil() (vectorious static method)": [[17, "vectorious.ceil", false]], "vectorious.check() (vectorious static method)": [[18, "vectorious.check", false]], "vectorious.combine() (vectorious static method)": [[19, "vectorious.combine", false]], "vectorious.copy() (vectorious static method)": [[20, "vectorious.copy", false]], "vectorious.cos() (vectorious static method)": [[21, "vectorious.cos", false]], "vectorious.cosh() (vectorious static method)": [[22, "vectorious.cosh", false]], "vectorious.cross() (vectorious static method)": [[23, "vectorious.cross", false]], "vectorious.det() (vectorious static method)": [[24, "vectorious.det", false]], "vectorious.diagonal() (vectorious static method)": [[25, "vectorious.diagonal", false]], "vectorious.dot() (vectorious static method)": [[26, "vectorious.dot", false]], "vectorious.eig() (vectorious static method)": [[27, "vectorious.eig", false]], "vectorious.equals() (vectorious static method)": [[28, "vectorious.equals", false]], "vectorious.equidimensional() (vectorious static method)": [[29, "vectorious.equidimensional", false]], "vectorious.equilateral() (vectorious static method)": [[30, "vectorious.equilateral", false]], "vectorious.exp() (vectorious static method)": [[31, "vectorious.exp", false]], "vectorious.expm1() (vectorious static method)": [[32, "vectorious.expm1", false]], "vectorious.eye() (vectorious static method)": [[33, "vectorious.eye", false]], "vectorious.fill() (vectorious static method)": [[34, "vectorious.fill", false]], "vectorious.floor() (vectorious static method)": [[35, "vectorious.floor", false]], "vectorious.foreach() (vectorious static method)": [[36, "vectorious.forEach", false]], "vectorious.fround() (vectorious static method)": [[37, "vectorious.fround", false]], "vectorious.gauss() (vectorious static method)": [[38, "vectorious.gauss", false]], "vectorious.get() (vectorious static method)": [[39, "vectorious.get", false]], "vectorious.inv() (vectorious static method)": [[41, "vectorious.inv", false]], "vectorious.log() (vectorious static method)": [[42, "vectorious.log", false]], "vectorious.log10() (vectorious static method)": [[43, "vectorious.log10", false]], "vectorious.log1p() (vectorious static method)": [[44, "vectorious.log1p", false]], "vectorious.log2() (vectorious static method)": [[45, "vectorious.log2", false]], "vectorious.lu() (vectorious static method)": [[46, "vectorious.lu", false]], "vectorious.lu_factor() (vectorious static method)": [[47, "vectorious.lu_factor", false]], "vectorious.magic() (vectorious static method)": [[48, "vectorious.magic", false]], "vectorious.map() (vectorious static method)": [[49, "vectorious.map", false]], "vectorious.matrix() (vectorious static method)": [[50, "vectorious.matrix", false]], "vectorious.max() (vectorious static method)": [[51, "vectorious.max", false]], "vectorious.mean() (vectorious static method)": [[52, "vectorious.mean", false]], "vectorious.min() (vectorious static method)": [[53, "vectorious.min", false]], "vectorious.multiply() (vectorious static method)": [[54, "vectorious.multiply", false]], "vectorious.norm() (vectorious static method)": [[55, "vectorious.norm", false]], "vectorious.normalize() (vectorious static method)": [[56, "vectorious.normalize", false]], "vectorious.ones() (vectorious static method)": [[57, "vectorious.ones", false]], "vectorious.pow() (vectorious static method)": [[58, "vectorious.pow", false]], "vectorious.prod() (vectorious static method)": [[59, "vectorious.prod", false]], "vectorious.product() (vectorious static method)": [[60, "vectorious.product", false]], "vectorious.project() (vectorious static method)": [[61, "vectorious.project", false]], "vectorious.push() (vectorious static method)": [[62, "vectorious.push", false]], "vectorious.random() (vectorious static method)": [[63, "vectorious.random", false]], "vectorious.range() (vectorious static method)": [[64, "vectorious.range", false]], "vectorious.rank() (vectorious static method)": [[65, "vectorious.rank", false]], "vectorious.reciprocal() (vectorious static method)": [[66, "vectorious.reciprocal", false]], "vectorious.reduce() (vectorious static method)": [[67, "vectorious.reduce", false]], "vectorious.reshape() (vectorious static method)": [[68, "vectorious.reshape", false]], "vectorious.round() (vectorious static method)": [[69, "vectorious.round", false]], "vectorious.row_add() (vectorious static method)": [[70, "vectorious.row_add", false]], "vectorious.scale() (vectorious static method)": [[71, "vectorious.scale", false]], "vectorious.set() (vectorious static method)": [[72, "vectorious.set", false]], "vectorious.sign() (vectorious static method)": [[73, "vectorious.sign", false]], "vectorious.sin() (vectorious static method)": [[74, "vectorious.sin", false]], "vectorious.sinh() (vectorious static method)": [[75, "vectorious.sinh", false]], "vectorious.slice() (vectorious static method)": [[76, "vectorious.slice", false]], "vectorious.solve() (vectorious static method)": [[77, "vectorious.solve", false]], "vectorious.sqrt() (vectorious static method)": [[78, "vectorious.sqrt", false]], "vectorious.square() (vectorious static method)": [[79, "vectorious.square", false]], "vectorious.subtract() (vectorious static method)": [[80, "vectorious.subtract", false]], "vectorious.sum() (vectorious static method)": [[81, "vectorious.sum", false]], "vectorious.swap() (vectorious static method)": [[82, "vectorious.swap", false]], "vectorious.tan() (vectorious static method)": [[83, "vectorious.tan", false]], "vectorious.tanh() (vectorious static method)": [[84, "vectorious.tanh", false]], "vectorious.toarray() (vectorious static method)": [[85, "vectorious.toArray", false]], "vectorious.tostring() (vectorious static method)": [[86, "vectorious.toString", false]], "vectorious.trace() (vectorious static method)": [[87, "vectorious.trace", false]], "vectorious.transpose() (vectorious static method)": [[88, "vectorious.transpose", false]], "vectorious.trunc() (vectorious static method)": [[89, "vectorious.trunc", false]], "vectorious.zeros() (vectorious static method)": [[90, "vectorious.zeros", false]]}, "objects": {"": [[1, 0, 1, "", "NDArray"], [2, 0, 1, "", "NDIter"], [3, 0, 1, "", "NDMultiIter"]], "NDArray": [[1, 1, 1, "", "T"], [1, 2, 1, "", "abs"], [1, 2, 1, "", "acos"], [1, 2, 1, "", "acosh"], [1, 2, 1, "", "add"], [1, 2, 1, "", "angle"], [1, 2, 1, "", "asin"], [1, 2, 1, "", "asinh"], [1, 2, 1, "", "atan"], [1, 2, 1, "", "atanh"], [1, 2, 1, "", "augment"], [1, 2, 1, "", "binOp"], [1, 2, 1, "", "cbrt"], [1, 2, 1, "", "ceil"], [1, 2, 1, "", "check"], [1, 2, 1, "", "combine"], [1, 2, 1, "", "copy"], [1, 2, 1, "", "cos"], [1, 2, 1, "", "cosh"], [1, 2, 1, "", "cross"], [1, 1, 1, "", "data"], [1, 2, 1, "", "det"], [1, 2, 1, "", "diagonal"], [1, 2, 1, "", "dot"], [1, 1, 1, "", "dtype"], [1, 2, 1, "", "eig"], [1, 2, 1, "", "equals"], [1, 2, 1, "", "equidimensional"], [1, 2, 1, "", "equilateral"], [1, 2, 1, "", "exp"], [1, 2, 1, "", "expm1"], [1, 2, 1, "", "fill"], [1, 2, 1, "", "floor"], [1, 2, 1, "", "forEach"], [1, 2, 1, "", "fround"], [1, 2, 1, "", "gauss"], [1, 2, 1, "", "get"], [1, 2, 1, "", "inv"], [1, 1, 1, "", "length"], [1, 2, 1, "", "log"], [1, 2, 1, "", "log10"], [1, 2, 1, "", "log1p"], [1, 2, 1, "", "log2"], [1, 2, 1, "", "lu"], [1, 2, 1, "", "lu_factor"], [1, 2, 1, "", "map"], [1, 2, 1, "", "max"], [1, 2, 1, "", "mean"], [1, 2, 1, "", "min"], [1, 2, 1, "", "multiply"], [1, 2, 1, "", "norm"], [1, 2, 1, "", "normalize"], [1, 2, 1, "", "pow"], [1, 2, 1, "", "prod"], [1, 2, 1, "", "product"], [1, 2, 1, "", "project"], [1, 2, 1, "", "push"], [1, 2, 1, "", "rank"], [1, 2, 1, "", "reciprocal"], [1, 2, 1, "", "reduce"], [1, 2, 1, "", "reshape"], [1, 2, 1, "", "round"], [1, 2, 1, "", "row_add"], [1, 2, 1, "", "scale"], [1, 2, 1, "", "set"], [1, 1, 1, "", "shape"], [1, 2, 1, "", "sign"], [1, 2, 1, "", "sin"], [1, 2, 1, "", "sinh"], [1, 2, 1, "", "slice"], [1, 2, 1, "", "solve"], [1, 2, 1, "", "sqrt"], [1, 2, 1, "", "square"], [1, 1, 1, "", "strides"], [1, 2, 1, "", "subtract"], [1, 2, 1, "", "sum"], [1, 2, 1, "", "swap"], [1, 2, 1, "", "tan"], [1, 2, 1, "", "tanh"], [1, 2, 1, "", "toArray"], [1, 2, 1, "", "toString"], [1, 2, 1, "", "trace"], [1, 2, 1, "", "transpose"], [1, 2, 1, "", "trunc"], [1, 1, 1, "", "w"], [1, 1, 1, "", "x"], [1, 1, 1, "", "y"], [1, 1, 1, "", "z"]], "NDIter": [[2, 1, 1, "", "backstrides"], [2, 1, 1, "", "coords"], [2, 2, 1, "", "current"], [2, 2, 1, "", "done"], [2, 1, 1, "", "factors"], [2, 1, 1, "", "index"], [2, 1, 1, "", "length"], [2, 1, 1, "", "lengthm1"], [2, 1, 1, "", "nd"], [2, 1, 1, "", "ndm1"], [2, 2, 1, "", "next"], [2, 1, 1, "", "pos"], [2, 1, 1, "", "shape"], [2, 1, 1, "", "shapem1"], [2, 1, 1, "", "strides"], [2, 1, 1, "", "x"]], "NDMultiIter": [[3, 3, 1, "", "current"], [3, 3, 1, "", "done"], [3, 1, 1, "", "index"], [3, 1, 1, "", "iters"], [3, 1, 1, "", "length"], [3, 1, 1, "", "lengthm1"], [3, 1, 1, "", "nd"], [3, 3, 1, "", "next"], [3, 1, 1, "", "numiter"], [3, 1, 1, "", "pos"], [3, 1, 1, "", "shape"]], "vectorious": [[4, 3, 1, "", "abs"], [5, 3, 1, "", "acos"], [6, 3, 1, "", "acosh"], [7, 3, 1, "", "add"], [8, 3, 1, "", "angle"], [9, 3, 1, "", "array"], [10, 3, 1, "", "asin"], [11, 3, 1, "", "asinh"], [12, 3, 1, "", "atan"], [13, 3, 1, "", "atanh"], [14, 3, 1, "", "augment"], [15, 3, 1, "", "binOp"], [16, 3, 1, "", "cbrt"], [17, 3, 1, "", "ceil"], [18, 3, 1, "", "check"], [19, 3, 1, "", "combine"], [20, 3, 1, "", "copy"], [21, 3, 1, "", "cos"], [22, 3, 1, "", "cosh"], [23, 3, 1, "", "cross"], [24, 3, 1, "", "det"], [25, 3, 1, "", "diagonal"], [26, 3, 1, "", "dot"], [27, 3, 1, "", "eig"], [28, 3, 1, "", "equals"], [29, 3, 1, "", "equidimensional"], [30, 3, 1, "", "equilateral"], [31, 3, 1, "", "exp"], [32, 3, 1, "", "expm1"], [33, 3, 1, "", "eye"], [34, 3, 1, "", "fill"], [35, 3, 1, "", "floor"], [36, 3, 1, "", "forEach"], [37, 3, 1, "", "fround"], [38, 3, 1, "", "gauss"], [39, 3, 1, "", "get"], [41, 3, 1, "", "inv"], [42, 3, 1, "", "log"], [43, 3, 1, "", "log10"], [44, 3, 1, "", "log1p"], [45, 3, 1, "", "log2"], [46, 3, 1, "", "lu"], [47, 3, 1, "", "lu_factor"], [48, 3, 1, "", "magic"], [49, 3, 1, "", "map"], [50, 3, 1, "", "matrix"], [51, 3, 1, "", "max"], [52, 3, 1, "", "mean"], [53, 3, 1, "", "min"], [54, 3, 1, "", "multiply"], [55, 3, 1, "", "norm"], [56, 3, 1, "", "normalize"], [57, 3, 1, "", "ones"], [58, 3, 1, "", "pow"], [59, 3, 1, "", "prod"], [60, 3, 1, "", "product"], [61, 3, 1, "", "project"], [62, 3, 1, "", "push"], [63, 3, 1, "", "random"], [64, 3, 1, "", "range"], [65, 3, 1, "", "rank"], [66, 3, 1, "", "reciprocal"], [67, 3, 1, "", "reduce"], [68, 3, 1, "", "reshape"], [69, 3, 1, "", "round"], [70, 3, 1, "", "row_add"], [71, 3, 1, "", "scale"], [72, 3, 1, "", "set"], [73, 3, 1, "", "sign"], [74, 3, 1, "", "sin"], [75, 3, 1, "", "sinh"], [76, 3, 1, "", "slice"], [77, 3, 1, "", "solve"], [78, 3, 1, "", "sqrt"], [79, 3, 1, "", "square"], [80, 3, 1, "", "subtract"], [81, 3, 1, "", "sum"], [82, 3, 1, "", "swap"], [83, 3, 1, "", "tan"], [84, 3, 1, "", "tanh"], [85, 3, 1, "", "toArray"], [86, 3, 1, "", "toString"], [87, 3, 1, "", "trace"], [88, 3, 1, "", "transpose"], [89, 3, 1, "", "trunc"], [90, 3, 1, "", "zeros"]]}, "objnames": {"0": ["js", "class", "JavaScript class"], "1": ["js", "attribute", "JavaScript attribute"], "2": ["js", "function", "JavaScript function"], "3": ["js", "staticfunction", "JavaScript static function"]}, "objtypes": {"0": "js:class", "1": "js:attribute", "2": "js:function", "3": "js:staticfunction"}, "terms": {"": [1, 31], "0": [1, 3, 5, 6, 8, 10, 11, 12, 13, 17, 18, 21, 22, 24, 27, 33, 34, 36, 38, 41, 42, 44, 45, 46, 47, 50, 56, 63, 64, 66, 67, 70, 72, 74, 76, 77, 80, 82, 83, 84, 90, 95], "017874717712402": [1, 75], "05": [1, 37], "050000190734863": [1, 37], "0779221057891846": [1, 61], "08553695678711": [1, 31, 32], "0986123085021973": [1, 42, 44], "1": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 95], "10": [1, 43, 60, 75], "100": [1, 43], "1000": [1, 43], "1071487665176392": [1, 12], "141592653589793": [1, 5], "14254654943943024": [1, 83], "175201177597046": [1, 75], "18": [1, 60], "185039758682251": [1, 83], "19": [1, 32], "2": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 95], "20": [1, 31], "22572622788897287": [1, 8], "249045729637146": [1, 12], "25": [1, 41, 77], "26726123690605164": [1, 56], "27": [1, 16], "27496153116226196": 63, "3": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 39, 42, 43, 44, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95], "316957950592041": [1, 6], "32": [1, 26], "3333333432674408": [1, 66], "3682245910167694": 63, "3862943649291992": [1, 44], "389056205749512": [1, 31, 32], "4": [1, 3, 7, 8, 14, 15, 19, 23, 25, 26, 38, 45, 46, 47, 48, 58, 60, 61, 62, 68, 69, 70, 71, 76, 77, 78, 82, 87, 88, 95], "4436354637145996": [1, 11], "49350643157959": [1, 61], "5": [1, 3, 7, 8, 13, 15, 17, 18, 19, 23, 26, 35, 37, 38, 41, 46, 47, 48, 54, 60, 61, 64, 66, 69, 70, 77, 87, 88, 89, 95], "5345224738121033": [1, 56], "5430806875228882": [1, 22], "5493061542510986": [1, 13], "5574077367782593": [1, 83], "5707963267948966": [1, 5], "5707963705062866": [1, 10], "6": [1, 3, 7, 8, 15, 19, 23, 26, 32, 38, 48, 59, 60, 61, 67, 71, 81, 88, 95], "6268603801727295": [1, 75], "6623376607894897": [1, 61], "6931471824645996": [1, 42, 44], "7": [1, 7, 15, 31, 46, 47, 48, 64, 77, 88, 95], "718": [1, 31], "7182817459106445": [1, 31, 32], "7416574954986572": [1, 55], "75": [1, 41, 77], "7581521272659302": 63, "7615941762924194": [1, 84], "762195587158203": [1, 22], "7627471685409546": [1, 6], "7853981852531433": [1, 12], "8": [1, 16, 48, 69, 70, 88, 89, 95], "8017836809158325": [1, 56], "8813735842704773": [1, 11], "9": [1, 7, 15, 48, 58, 64, 78, 88, 95], "9640275835990906": [1, 84], "9950547814369202": [1, 84], "A": [1, 77], "If": 97, "The": [92, 95, 96, 97], "ab": 1, "absolut": [1, 4], "acceler": [1, 7, 26, 27, 41, 46, 47, 51, 54, 55, 71, 77, 80, 97], "aco": 1, "acosh": 1, "across": [1, 88], "add": [1, 70], "algebra": 93, "alia": 9, "all": [1, 59, 64, 71, 87], "along": 1, "alpha": [1, 7], "also": [1, 42, 44, 55], "amax": [1, 51], "an": [1, 2, 3, 9, 23, 33, 57, 64, 90], "angl": 1, "ani": [1, 89], "anoth": [1, 70], "api": 93, "apt": 97, "ar": [1, 18, 28, 95, 97], "arccosin": [1, 5, 6], "arcsin": [1, 10, 11], "arctang": [1, 12, 13], "arg": [3, 9], "argument": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "arithmet": [1, 52], "arrai": [1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 82, 83, 84, 85, 88, 89, 90, 94], "ascend": 64, "asin": 1, "asinh": 1, "assert": [1, 18, 29, 30, 79], "atan": 1, "atanh": 1, "augment": 1, "avail": 97, "ax": [1, 77], "axpi": [1, 7, 80], "b": [1, 15, 67, 77], "back": 97, "backstrid": 2, "base": [1, 31, 43, 45], "begin": [1, 76], "between": [1, 8], "binari": [1, 15], "binop": 1, "bla": [1, 7, 26, 51, 54, 55, 71, 80, 97], "boolean": [1, 2, 3, 28], "both": [95, 97], "bound": [1, 18], "brew": 97, "c": 50, "calcul": [1, 23, 55], "call": [1, 55], "can": [1, 23, 64, 96], "cbrt": 1, "ceil": 1, "check": [1, 28], "class": [1, 2, 3], "co": 1, "column": [50, 95], "combin": 1, "compon": [1, 23], "comput": [1, 23], "consol": [1, 36], "const": [2, 3], "constant": [1, 31], "construct": [1, 2, 3, 92, 96], "contain": [57, 63, 64, 90, 95], "convert": [1, 85, 86], "coord": 2, "copi": 1, "core": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "correspond": 76, "cosh": 1, "cosin": [1, 21, 22], "creat": [33, 48, 50, 57, 63, 64, 90, 95], "creation": 94, "cross": 1, "cube": [1, 16], "current": [1, 2, 3, 55, 92, 96], "data": 1, "decomposit": [1, 46], "depend": 97, "deprec": [1, 29, 30], "descend": 64, "dest": [1, 70], "det": 1, "determin": [1, 8, 24, 41], "dev": 97, "develop": 93, "diagon": [1, 87, 88, 95], "digit": [1, 89], "dim": 1, "dimens": [1, 54, 76], "distribut": [63, 95], "do": [1, 29, 30], "document": 93, "done": [2, 3], "dot": 1, "dtype": [1, 95], "e": [1, 31, 38, 64, 97], "each": [1, 4, 5, 6, 10, 11, 12, 13, 16, 17, 21, 22, 31, 32, 35, 37, 42, 43, 44, 45, 58, 69, 73, 74, 75, 78, 83, 84, 89, 95], "echelon": [1, 38], "eig": 1, "eigenvalu": [1, 27], "eigenvector": [1, 27], "either": 64, "element": [1, 2, 4, 5, 6, 10, 11, 12, 13, 16, 17, 21, 22, 31, 32, 35, 37, 39, 42, 43, 44, 45, 51, 53, 58, 59, 66, 69, 71, 72, 73, 74, 75, 78, 83, 84, 87, 89], "elimin": [1, 38, 65], "end": [1, 76], "equal": [1, 17, 35], "equat": [1, 77], "equidimension": 1, "equilater": 1, "equival": [1, 36, 49, 67], "error": [1, 18, 29, 30, 79], "euclidean": [1, 55], "euler": [1, 31], "exampl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "except": [1, 23], "exp": [1, 32], "expm1": 1, "expon": [1, 58], "f": [1, 15, 36, 67], "factor": [1, 2, 47], "fall": 97, "fals": [2, 3], "fill": 1, "find": [1, 65], "float": [1, 37], "float32arrai": 95, "float64": 1, "floor": 1, "foreach": 1, "form": [1, 38], "format": [1, 86], "formula": [1, 61], "fraction": [1, 89], "framework": 97, "from": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95], "fround": 1, "full": [1, 46], "function": [1, 36, 67], "g": [64, 97], "gauss": 1, "gaussian": [1, 65], "geev": [1, 27], "gemm": [1, 54], "gesv": [1, 77], "get": [1, 24, 25, 27, 51, 52, 53, 66, 87, 97], "getrf": [1, 41, 46, 47], "getri": [1, 41], "give": 64, "greater": [1, 17], "guid": 93, "hadamard": [1, 60], "have": [1, 29, 30], "header": 97, "homebrew": 97, "how": 96, "howev": 97, "hyperbol": [1, 6, 11, 13, 22, 75, 84], "i": [1, 2, 3, 9, 18, 31, 38, 39, 51, 58, 72, 73, 77, 79, 82, 92, 96], "ident": 33, "implement": 97, "import": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95], "includ": 97, "index": [1, 2, 3, 18], "indic": [1, 3, 18, 39, 72, 73], "initialvalu": [1, 67], "insid": [1, 70], "instal": 96, "instanc": [1, 2, 3], "int32": 1, "int32arrai": [1, 46, 47], "int8": 95, "int8arrai": 95, "integ": [1, 17, 35, 69, 89], "interv": 64, "inv": 1, "invers": [1, 41], "iter": [2, 3], "j": [1, 18, 39, 72, 82], "jacobi": [1, 27], "javascript": [1, 85], "jordan": [1, 38], "l2": [1, 55], "lapack": [1, 27, 41, 46, 47, 77, 97], "largest": [1, 35, 51], "lead": 1, "learn": 96, "length": [1, 2, 3, 30, 55], "lengthm1": [2, 3], "less": [1, 35], "libbla": 97, "liblapack": 97, "librari": 97, "linear": 93, "ln": [1, 42, 44], "log": [1, 36], "log10": 1, "log1p": 1, "log2": 1, "log_": [1, 42, 44], "logarithm": [1, 31, 42, 43, 44, 45], "lu": [1, 47], "lu_factor": 1, "main": 95, "make": [1, 20], "map": 1, "match": [1, 29, 30, 54], "math": [1, 21, 74], "matric": 54, "matrix": [1, 33, 48, 79], "max": 1, "maximum": [1, 51], "mean": 1, "menu": 91, "method": [1, 27, 95], "might": 97, "min": 1, "minimum": [1, 53], "mirror": [1, 88], "multipl": [1, 26, 70], "multipli": [1, 7, 70, 71], "n": [1, 18, 33, 39, 48, 72], "naiv": 97, "natur": [1, 31, 42, 44], "navig": 91, "nd": [2, 3], "ndarrai": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "nditer": 3, "ndm1": 2, "nearest": [1, 37, 69], "need": 97, "neg": [1, 73], "new": [1, 2, 3, 9, 62, 95], "next": [2, 3], "norm": 1, "normal": 1, "npm": 97, "nrm2": [1, 55], "number": [1, 2, 3, 7, 8, 18, 24, 26, 28, 33, 34, 35, 39, 48, 50, 51, 52, 53, 55, 57, 58, 59, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 76, 81, 82, 87, 90, 95], "numit": 3, "object": [1, 2, 3], "one": [1, 70], "ones": 95, "onli": [1, 23], "onto": [1, 61], "oper": [1, 15, 23], "option": [1, 97], "otherwis": [1, 2, 3, 23], "out": [1, 18], "over": [63, 95], "packag": 93, "page": 92, "part": [1, 89], "perform": [1, 15, 26, 46, 47], "pi": [1, 21, 74], "po": [2, 3], "posit": [1, 2, 3, 73, 78], "pow": 1, "power": [1, 58], "precis": [1, 37], "prod": 1, "product": [1, 23, 59], "project": 1, "prototyp": [1, 36, 49, 67], "provid": 64, "push": 1, "r": 50, "rank": 1, "readabl": [1, 86], "reciproc": 1, "reduc": [1, 38], "refer": 93, "remov": [1, 89], "represent": [1, 37], "reshap": 1, "return": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "root": [1, 16, 78], "round": 1, "row": [1, 38, 50, 70, 82, 95], "row_add": 1, "run": 97, "same": [1, 29, 30, 95], "sampl": [63, 95], "scal": [1, 71], "scalar": [1, 34, 70, 71], "scale": 1, "separ": 64, "set": 1, "shape": [1, 2, 3, 29, 57, 63, 68, 90], "shapem1": 2, "short": 1, "shorthand": 95, "sidebar": 91, "sign": 1, "sin": 1, "sine": [1, 74, 75], "singl": [1, 37], "sinh": 1, "size": [33, 48], "skip": 97, "slice": 1, "smallest": [1, 17, 53], "solv": 1, "sourc": [1, 70], "specifi": [1, 64, 71], "sqrt": 1, "squar": [1, 48, 78], "start": 64, "static": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "step": [1, 2, 3, 64, 76], "stop": 64, "stride": [1, 2], "string": [1, 86], "subtract": [1, 32], "sum": [1, 87, 95], "swap": 1, "system": 97, "t": 1, "tan": 1, "tangent": [1, 83, 84], "tanh": 1, "than": [1, 17, 35], "thi": [1, 23], "three": [1, 23], "through": 91, "throw": [1, 18, 23, 29, 30, 79], "toarrai": 1, "toler": [1, 28, 65], "tostr": 1, "trace": 1, "transpos": 1, "true": [1, 2, 3, 28], "trunc": 1, "two": [1, 54, 82], "type": [1, 2, 3, 33], "typedarrai": [1, 36, 49, 67], "typescript": 97, "uint32": 1, "undefin": [2, 3], "under": [92, 96], "underli": 1, "uniform": [63, 95], "us": [1, 27, 61, 65, 91, 96, 97], "usecas": 97, "user": 93, "v": 95, "valu": [1, 2, 3, 4, 34, 49, 51, 53, 62, 69, 72], "vector": [1, 19, 23, 63, 95], "vectori": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 95, 96, 97], "w": 1, "want": 97, "welcom": 93, "what": 97, "where": [1, 31, 77, 96], "whether": [1, 73], "which": 97, "wise": [1, 66], "within": [1, 18], "x": [1, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "y": [1, 7, 8, 14, 15, 19, 23, 26, 28, 29, 30, 54, 60, 61, 77, 80], "you": [96, 97], "your": 97, "z": 1, "zero": [1, 73]}, "titles": ["Classes", "NDArray", "NDIter", "NDMultiIter", "abs", "acos", "acosh", "add", "angle", "array", "asin", "asinh", "atan", "atanh", "augment", "binOp", "cbrt", "ceil", "check", "combine", "copy", "cos", "cosh", "cross", "det", "diagonal", "dot", "eig", "equals", "equidimensional", "equilateral", "exp", "expm1", "eye", "fill", "floor", "forEach", "fround", "gauss", "get", "Functions", "inv", "log", "log10", "log1p", "log2", "lu", "lu_factor", "magic", "map", "matrix", "max", "mean", "min", "multiply", "norm", "normalize", "ones", "pow", "prod", "product", "project", "push", "random", "range", "rank", "reciprocal", "reduce", "reshape", "round", "row_add", "scale", "set", "sign", "sin", "sinh", "slice", "solve", "sqrt", "square", "subtract", "sum", "swap", "tan", "tanh", "toArray", "toString", "trace", "transpose", "trunc", "zeros", "API reference", "Development", "Home", "Basics", "Array creation", "User guide", "Installation"], "titleterms": {"Ones": 95, "ab": 4, "aco": 5, "acosh": 6, "add": 7, "angl": 8, "api": 91, "arrai": [9, 95], "asin": 10, "asinh": 11, "atan": 12, "atanh": 13, "augment": 14, "basic": 94, "binop": 15, "browser": 97, "cbrt": 16, "ceil": 17, "check": 18, "class": 0, "co": 21, "combin": 19, "constructor": 95, "copi": 20, "cosh": 22, "creation": 95, "cross": 23, "det": 24, "develop": 92, "diagon": 25, "dot": 26, "eig": 27, "equal": 28, "equidimension": 29, "equilater": 30, "exp": 31, "expm1": 32, "ey": 33, "fill": 34, "floor": 35, "foreach": 36, "fround": 37, "function": 40, "gauss": 38, "get": 39, "guid": 96, "home": 93, "instal": 97, "inv": 41, "j": 97, "link": 93, "linux": 97, "log": 42, "log10": 43, "log1p": 44, "log2": 45, "lu": 46, "lu_factor": 47, "maco": 97, "magic": [48, 95], "map": 49, "matrix": [50, 95], "max": 51, "mean": 52, "min": 53, "multipli": 54, "ndarrai": 1, "nditer": 2, "ndmultiit": 3, "node": 97, "norm": 55, "normal": 56, "ones": 57, "pow": 58, "prod": 59, "product": 60, "project": 61, "push": 62, "random": [63, 95], "rang": 64, "rank": 65, "reciproc": 66, "reduc": 67, "refer": 91, "reshap": 68, "round": 69, "row_add": 70, "scale": 71, "set": 72, "sign": 73, "sin": 74, "sinh": 75, "slice": 76, "solv": 77, "sqrt": 78, "squar": 79, "subtract": 80, "sum": 81, "swap": 82, "tan": 83, "tanh": 84, "toarrai": 85, "tostr": 86, "trace": 87, "transpos": 88, "trunc": 89, "us": 93, "user": 96, "zero": [90, 95]}})